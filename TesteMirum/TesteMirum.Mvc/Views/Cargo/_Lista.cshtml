
@model List<TesteMirum.Application.ViewModels.Cargo.CargoViewModel>

<table id="mytable" class="table table-bordred table-striped">

    <thead>
        <tr>
            <th>Cód. Cargo</th>
            <th>Cargo</th>
            <th>Salário Base</th>
            <th>Editar</th>
            <th>Excluir</th>
        </tr>
    </thead>
    <tbody>

        @foreach (var item in Model)
        {
            <tr>

                <td>@item.Id</td>
                <td>@item.Cargo_Nome</td>
                <td>@item.Salario_Base</td>
                <td><p data-placement="top" data-toggle="tooltip" title="Editar">
                    <button id="bt_editar" onclick="EditarCargo(@item.Id,'@item.Cargo_Nome','@item.Salario_Base')" class="btn btn-primary btn-xs" data-title="Editar">
                    <span >Editar</span>
                        </button>
                    </p>
                </td>
                <td><p data-placement="top" data-toggle="tooltip" title="Excluir">
                    <button id="bt_excluir" onclick="ConfirmaExclusao(@item.Id)" class="btn btn-danger btn-xs" data-title="excluir">
                    <span>Excluir</span>
                        </button>
                    </p>
                </td>
            </tr>
        }
    </tbody>

</table>

<script>
        var quantPessoas = 0;
        $(document).ready(function () {


            $('#mytable').DataTable({
                "language": {
                    "sProcessing": "Procesando...",
                    "sLengthMenu": "Mostrar _MENU_ registros",
                    "sZeroRecords": "Não foi encontrado resultados",
                    "sEmptyTable": "Ningún dato disponible en esta tabla",
                    "sInfo": "Mostrando registros de _START_ até _END_ de um total de _TOTAL_ registros",
                    "sInfoEmpty": "Mostrando registros de 0 até 0 de um total de 0 registros",
                    "sInfoFiltered": "(filtrado de um total de _MAX_ registros)",
                    "sInfoPostFix": "",
                    "sSearch": "Buscar:",
                    "sUrl": "",
                    "sInfoThousands": ",",
                    "sLoadingRecords": "Carregando...",
                    "oPaginate": {
                        "sFirst": "Primero",
                        "sLast": "Último",
                        "sNext": "Próximo",
                        "sPrevious": "Anterior"
                    },
                    "oAria": {
                        "sSortAscending": ": Activar para ordenar la columna de manera ascendente",
                        "sSortDescending": ": Activar para ordenar la columna de manera descendente"
                    }
                }
            });

        });


        function EditarCargo(id, nome, salario_base) {
            $('#Cargo_Nome').val(nome);
            $('#Salario_Base').val(salario_base);

            $('#divCriar').hide();
            $('#divEditar').show();
            $('#editarId').val(id);
            $(window).scrollTop(0);

        }


        function ConfirmaExclusao(data) {
            QuantidadePessoas(data);           
        }
        function ExcluirCargo(data) {
            debugger;
            var id = { id: data };
            $.ajax({
                type: "POST",
                url: '@Url.Action("Excluir","Cargo")',
                dataType: 'html',
                data: id,
                success: function (result) {
                    $('#partialLstCargo').html('');
                    $('#partialLstCargo').append(result);
                    $(window).scrollTop(0);
                },
                error: function (error) {
                    console.log(error);
                }
            });
        }

        function QuantidadePessoas(data) {
            var id = { cargoId: data };
            $.ajax({
                type: "GET",
                url: '@Url.Action("QuantidadePessoas","Cargo")',
                dataType: 'json',
                data: id,
                success: function (result) {
                    debugger;
                    quantPessoas = result.quantPessoas;

                    MensagemExclusao(data);
                },
                error: function (error) {
                    debugger;
                    console.log(error);
                }
            });
        }

    function MensagemExclusao(data) {
        debugger;
         Swal.fire({
                title: 'Atenção',
                text: "Tem certeza que deseja excluir o registro? Existem " + quantPessoas + " pessoa(s) vinculada(s) este cargo e será EXCLUÍDA(S).",
                type: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Sim',
                cancelButtonText: 'Não'
            }).then(function (result) {
                if (result.value) {
                    ExcluirCargo(data);
                }
            })
    }
</script>
